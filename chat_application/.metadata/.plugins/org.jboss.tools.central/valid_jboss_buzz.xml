<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>DevOpsDays Raleigh 2019 - Creating Real DevOpS Heroes (workshop)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/G6SQS8Qqkps/devopsdays-raleigh-2019-creating-real-devops-heroes-workshop.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-devopsdays_raleigh_2019_creating_real_devops_heroes_workshop</id><updated>2019-10-01T14:00:04Z</updated><published>2019-10-01T14:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="background-color: white; clear: both; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; text-align: center;"&gt;&lt;a href="https://www.devopsdays.org/events/2019-raleigh/welcome/" style="clear: left; color: #4d469c; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="DevOps Days" border="0" data-original-height="700" data-original-width="738" height="189" src="https://1.bp.blogspot.com/-FIa5Yx-TuM8/XH1o2SwpWNI/AAAAAAAAtf4/CIaDAo2_NYk9BsZytIj8QhXdJnZywv6qACLcBGAs/s200/Screenshot%2B2019-03-04%2Bat%2B19.04.53.png" style="background: transparent none repeat scroll 0% 0%; border-radius: 0px; border: 1px solid transparent; box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 0px; padding: 8px; position: relative;" title="" width="200" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;span style="background-color: white; color: #444444; font-family: &amp;quot;arial&amp;quot; , &amp;quot;tahoma&amp;quot; , &amp;quot;helvetica&amp;quot; , &amp;quot;freesans&amp;quot; , sans-serif; font-size: 13px;"&gt;Today was the launch of&amp;nbsp; this new workshop, focused on creating real DevOps heros by sharing a brand new (for most) tool for their toolboxes at &lt;/span&gt;&lt;span style="background-color: white; color: #444444; font-family: &amp;quot;arial&amp;quot; , &amp;quot;tahoma&amp;quot; , &amp;quot;helvetica&amp;quot; , &amp;quot;freesans&amp;quot; , sans-serif; font-size: 13px;"&gt;&lt;a href="https://www.devopsdays.org/events/2019-raleigh/welcome/" style="background-color: white; color: #4d469c; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; text-decoration-line: none;" target="_blank"&gt;DevOps Days Raleigh&lt;/a&gt;. &lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #444444; font-family: &amp;quot;arial&amp;quot; , &amp;quot;tahoma&amp;quot; , &amp;quot;helvetica&amp;quot; , &amp;quot;freesans&amp;quot; , sans-serif; font-size: 13px;"&gt;&lt;br /&gt;&lt;/span&gt; &lt;span style="background-color: white; color: #444444; font-family: &amp;quot;arial&amp;quot; , &amp;quot;tahoma&amp;quot; , &amp;quot;helvetica&amp;quot; , &amp;quot;freesans&amp;quot; , sans-serif; font-size: 13px;"&gt;Whether you're a developer or and operations minded person, it's always nice to have a powerful selection of tooling to choose from when tackling the various problems in your daily work.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #444444; font-family: &amp;quot;arial&amp;quot; , &amp;quot;tahoma&amp;quot; , &amp;quot;helvetica&amp;quot; , &amp;quot;freesans&amp;quot; , sans-serif; font-size: 13px;"&gt;When this &lt;a href="https://www.schabell.org/2019/07/devops-days-raleigh-2019-devops-heros-accepted.html" target="_blank"&gt;session was accepted&lt;/a&gt; I was pretty excited as it gave me the chance to share something entirely new with process automation and DevOps at it's core. While thinking about how to leverage automation integration across organizations for more than just CI/CD and infrastructure automation, this workshop was born.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: white; color: #444444; font-family: &amp;quot;arial&amp;quot; , &amp;quot;tahoma&amp;quot; , &amp;quot;helvetica&amp;quot; , &amp;quot;freesans&amp;quot; , sans-serif; font-size: 13px;"&gt;Here's the abstract and workshop slides for you to enjoy as it's designed for anyone to enjoy from any web browser at their own pace. &lt;/span&gt;&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px;" /&gt;&lt;span style="background-color: white; color: #444444; font-family: &amp;quot;arial&amp;quot; , &amp;quot;tahoma&amp;quot; , &amp;quot;helvetica&amp;quot; , &amp;quot;freesans&amp;quot; , sans-serif; font-size: 13px;"&gt;The abstract for this session was focused on given you the chance to experience process automation tooling from the ground up, even if you have no prior experience with this type of tooling.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; margin: 0px; position: relative;"&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhpam-devops-workshop/#/" target="_blank"&gt;DevOps Heroes - Adding Automation Integration to your Toolbox&lt;/a&gt;&lt;/h3&gt;&lt;div style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px;"&gt;&lt;div&gt;&lt;i&gt;DevOps is more than the process of automating your CI/CD pipelines to generate code and deployment artifacts for production. It's also about organizational change and integration of many subtle processes that help you to deliver applications seamlessly from development to production through your operations.&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;Let's unlock the power of process integration with a hands-on workshop using your own devices (laptops). We'll take you through the integration of an organizational process as part of your DevOps strategy. Step-by-step you'll build a domain model, creating an automated process, integrating user approval tasks and more using modern open source process automation tooling.&amp;nbsp;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;Bring your laptop as this is a hands on experience that takes you from nothing to a fully working DevOps supporting automation integration project. No experience in automation integration is required. Let's add a new tool to your development toolbox and get you jump started on automation integration that's supporting your organizations DevOps activities.&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px;"&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px;"&gt;&lt;i&gt;(90 minute workshop format with bring your own device, so you can &lt;a href="https://bpmworkshop.gitlab.io/rhpam-devops-workshop/#/" target="_blank"&gt;do this at home too&lt;/a&gt;!)&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;iframe allowfullscreen="" frameborder="0" height="380" marginheight="0" marginwidth="0" scrolling="no" src="https://bpmworkshop.gitlab.io/rhpam-devops-workshop/#/" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="660"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Hope you enjoyed this workshop if you attended the event, otherwise, enjoy it now at your own pace!&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=sXT95_4Id5k:3jZegFT7mdA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=sXT95_4Id5k:3jZegFT7mdA:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=sXT95_4Id5k:3jZegFT7mdA:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=sXT95_4Id5k:3jZegFT7mdA:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=sXT95_4Id5k:3jZegFT7mdA:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=sXT95_4Id5k:3jZegFT7mdA:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=sXT95_4Id5k:3jZegFT7mdA:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=sXT95_4Id5k:3jZegFT7mdA:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=sXT95_4Id5k:3jZegFT7mdA:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=sXT95_4Id5k:3jZegFT7mdA:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=sXT95_4Id5k:3jZegFT7mdA:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/sXT95_4Id5k" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/G6SQS8Qqkps" height="1" width="1" alt=""/&gt;</content><summary>Today was the launch of  this new workshop, focused on creating real DevOps heros by sharing a brand new (for most) tool for their toolboxes at DevOps Days Raleigh. Whether you're a developer or and operations minded person, it's always nice to have a powerful selection of tooling to choose from when tackling the various problems in your daily work. When this session was accepted I was pretty exci...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-10-01T14:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/sXT95_4Id5k/devopsdays-raleigh-2019-creating-real-devops-heroes-workshop.html</feedburner:origLink></entry><entry><title>Introduction to microservices observability with Eclipse MicroProfile</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/rJ8ne0qSdhc/" /><category term="Microservices" /><category term="MicroProfile" /><author><name>rhsilva</name></author><id>https://developers.redhat.com/blog/?p=631507</id><updated>2019-10-01T07:00:20Z</updated><published>2019-10-01T07:00:20Z</published><content type="html">&lt;p&gt;Microservices provide a modern approach to development, which is compliant with the cloud environment and gives us the ability to create cloud-native applications. With &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt;, we promote resilience, fault tolerance, and scale; however, a microservice approach also presents different challenges than monolithic applications because of its distributed nature.&lt;/p&gt; &lt;p&gt;One of these challenges involves monitoring and logging, which naturally brings us to the concept of observability. In this article, we&amp;#8217;ll look at how &lt;a href="https://microprofile.io/"&gt;Eclipse MicroProfile&lt;/a&gt; can help you implement observability in microservices.&lt;span id="more-631507"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is observability?&lt;/h2&gt; &lt;p&gt;The concept of observability comes from the control theory, that is, a math theory.&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Formally, a system is said to be &lt;b&gt;observable&lt;/b&gt; if, for any possible sequence of &lt;a class="mw-redirect" title="State space representation" href="https://en.wikipedia.org/wiki/State_space_representation#Linear_systems"&gt;state and control vectors&lt;/a&gt; (the latter being variables whose values one can choose), the current state (the values of the underlying dynamically evolving variables) can be determined in finite time using only the outputs.&lt;/em&gt; — &lt;a href="https://en.wikipedia.org/wiki/Observability"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Some developers define observability in a microservice architecture as the set of metrics, logging, and tracing tools, but I think observability is a more general concept. Metrics, logging, and tracing are simply ways to provide observability.&lt;/p&gt; &lt;p&gt;To me, observability is the capacity of a system to expose precise information about its states in a quick and easy way. Unlike monitoring, observability is about the system. When we talk about monitoring, the focus is on the tools used to monitor the system, which can be easy or hard to monitor. When we talk about observability, the focus is on the system itself and the need to provide this information in an easier and faster way.&lt;/p&gt; &lt;h2&gt;Observability with MicroProfile&lt;/h2&gt; &lt;p&gt;With the aim of supporting easy observability, MicroProfile has specifications that let the developer implement observability in microservices. MicroProfile has three main specifications for this:  Microprofile OpenTracing, MicroProfile Metrics, and MicroProfile HealthCheck—all of which we&amp;#8217;ll look at here.&lt;/p&gt; &lt;p&gt;&lt;img class="alignnone size-full wp-image-270" src="https://rhuanrochanet.files.wordpress.com/2019/02/screenshot-from-2019-02-27-16-44-31.png" alt="Screenshot from 2019-02-27 16-44-31" width="724" height="395" /&gt;&lt;/p&gt; &lt;h3&gt;MicroProfile OpenTracing&lt;/h3&gt; &lt;p&gt;The &lt;a href="https://microprofile.io/project/eclipse/microprofile-opentracing"&gt;MicroProfile OpenTracing&lt;/a&gt; specification permits us to use distributed tracing using the OpenTracing API to trace  the flow of a request across a service. This specification is compatible with Zipkin and Jaeger, and it permits us to use those tools to show information about the distributed tracing. Below is an example of how to use MicroProfile OpenTracing.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;@Path("subjects") @Traced public SubjectEndpoint { &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;MicroProfile Metrics&lt;/h3&gt; &lt;p&gt;&lt;a href="https://microprofile.io/project/eclipse/microprofile-metrics"&gt;MicroProfile Metrics&lt;/a&gt; is a specification that permits us to expose metrics information about our applications. With this, we can expose precise metrics to be consumed more quickly and easily. Below is an example of how to use MicroProfile Metrics.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;@Counted public CounterBean() { }&lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;MicroProfile HealthCheck&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The &lt;a href="https://microprofile.io/project/eclipse/microprofile-health"&gt;MicroProfile HealthCheck&lt;/a&gt; spec permits us to expose if the application is up or down in our environment. It works as a Boolean response (yes or no) to the question, &amp;#8220;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Is my application still running ok?&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&amp;#8220;. Below is an example of how to use MicroProfile HealthCheck.&lt;/span&gt;&lt;/p&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;&lt;span style="font-weight: 400;"&gt;@Health&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;@ApplicationScoped&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;public&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;class&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;ApplicationHealthCheck&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;implements&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;HealthCheck&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;{&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;@Override&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;public&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;HealthCheckResponse&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; call&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;()&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;{&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;        &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;return&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;HealthCheckResponse&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;                &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;named&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;(&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;"application-check"&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;).&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;up&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;()&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;                &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;withData&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;(&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;"CPUAvailable"&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;,&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Runtime&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;getRuntime&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;().&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;availableProcessors&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;())&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;                &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;withData&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;(&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;"MemoryFree"&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;,&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Runtime&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;getRuntime&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;().&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;freeMemory&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;())&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;                &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;withData&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;(&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;"TotalMemory"&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;,&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Runtime&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;getRuntime&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;().&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;totalMemory&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;())&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;                &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;build&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;();&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;    &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;}&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;} &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Eclipse MicroProfile provides several solutions to microservice challenges, including various specifications to promote observability in our microservices. With these specs, we can use MicroProfile with Jaeger, Zipkin, Prometheus, and other tools to promote better observability and monitoring. I will provide more details of these specs and how to use them in upcoming articles.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F01%2Fintroduction-to-microservices-observability-with-eclipse-microprofile%2F&amp;#38;linkname=Introduction%20to%20microservices%20observability%20with%20Eclipse%20MicroProfile" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F01%2Fintroduction-to-microservices-observability-with-eclipse-microprofile%2F&amp;#38;linkname=Introduction%20to%20microservices%20observability%20with%20Eclipse%20MicroProfile" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F01%2Fintroduction-to-microservices-observability-with-eclipse-microprofile%2F&amp;#38;linkname=Introduction%20to%20microservices%20observability%20with%20Eclipse%20MicroProfile" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F01%2Fintroduction-to-microservices-observability-with-eclipse-microprofile%2F&amp;#38;linkname=Introduction%20to%20microservices%20observability%20with%20Eclipse%20MicroProfile" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F01%2Fintroduction-to-microservices-observability-with-eclipse-microprofile%2F&amp;#38;linkname=Introduction%20to%20microservices%20observability%20with%20Eclipse%20MicroProfile" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F01%2Fintroduction-to-microservices-observability-with-eclipse-microprofile%2F&amp;#38;linkname=Introduction%20to%20microservices%20observability%20with%20Eclipse%20MicroProfile" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F01%2Fintroduction-to-microservices-observability-with-eclipse-microprofile%2F&amp;#38;linkname=Introduction%20to%20microservices%20observability%20with%20Eclipse%20MicroProfile" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F01%2Fintroduction-to-microservices-observability-with-eclipse-microprofile%2F&amp;#038;title=Introduction%20to%20microservices%20observability%20with%20Eclipse%20MicroProfile" data-a2a-url="https://developers.redhat.com/blog/2019/10/01/introduction-to-microservices-observability-with-eclipse-microprofile/" data-a2a-title="Introduction to microservices observability with Eclipse MicroProfile"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/01/introduction-to-microservices-observability-with-eclipse-microprofile/"&gt;Introduction to microservices observability with Eclipse MicroProfile&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/rJ8ne0qSdhc" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Microservices provide a modern approach to development, which is compliant with the cloud environment and gives us the ability to create cloud-native applications. With microservices, we promote resilience, fault tolerance, and scale; however, a microservice approach also presents different challenges than monolithic applications because of its distributed nature. One of these challenges involves monitoring and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/01/introduction-to-microservices-observability-with-eclipse-microprofile/"&gt;Introduction to microservices observability with Eclipse MicroProfile&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">631507</post-id><dc:creator>rhsilva</dc:creator><dc:date>2019-10-01T07:00:20Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/01/introduction-to-microservices-observability-with-eclipse-microprofile/</feedburner:origLink></entry><entry><title>Sending a telegram with Apache Camel K and Visual Studio Code</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/_f1CXIZ_QfA/" /><category term="Apache Camel" /><category term="Developer Tools" /><category term="VS Code" /><category term="Camel K" /><category term="VS Code Extensions" /><author><name>Brian Fitzpatrick</name></author><id>https://developers.redhat.com/blog/?p=630437</id><updated>2019-09-30T07:00:22Z</updated><published>2019-09-30T07:00:22Z</published><content type="html">&lt;p&gt;When I was introduced to &lt;a href="https://camel.apache.org/camel-k/latest/index.html" target="_blank" rel="noopener noreferrer"&gt;Apache Camel K&lt;/a&gt; a few months ago, I was amazed at how quickly developers could write and deploy an &lt;a href="https://camel.apache.org/" target="_blank" rel="noopener noreferrer"&gt;Apache Camel&lt;/a&gt;-based integration on &lt;a href="https://developers.redhat.com/developer-tools/kubernetes"&gt;Kubernetes&lt;/a&gt;. We immediately started work on creating Microsoft Visual Studio (VS) Code-based tools to make things even easier.&lt;/p&gt; &lt;p&gt;What is Camel K? It’s a lightweight integration framework built from Apache Camel and designed for a serverless/microsystem world that runs natively on Kubernetes. It lets developers write integrations in their favorite Camel DSL and quickly deploy them on Kubernetes or &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;. You can even write your integrations in lightweight languages like Groovy or JavaScript.&lt;/p&gt; &lt;p&gt;We already built language support in VS Code for Apache Camel using the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-apache-camel"&gt;Language Server Protocol (LSP)&lt;/a&gt;, offering auto-completion for Camel component URIs in both XML and Java. More recently, we began adding the same support for Groovy, JavaScript, YAML, and Kotlin. (See the &lt;a href="https://github.com/camel-tooling/camel-lsp-client-vscode" target="_blank" rel="noopener noreferrer"&gt;Apache Camel LSP client project&lt;/a&gt; for details.)&lt;/p&gt; &lt;p&gt;Now, with our new &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-camelk" target="_blank" rel="noopener noreferrer"&gt;Tooling for Apache Camel K by Red Hat extension&lt;/a&gt;, we add support for Camel K in your IDE. To illustrate the tools in action, let’s start with a simple user story inspired by an article that Nicola Ferraro wrote a few years ago (&lt;a href="https://www.nicolaferraro.me/2016/05/27/creating-a-telegram-bot-in-5-minutes-with-apache-camel/"&gt;Creating a Telegram Bot in 5 minutes with Apache Camel&lt;/a&gt;).&lt;span id="more-630437"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;As a developer, I want to send myself a telegram notice any time somebody mentions the hashtag #camelkrocks so that I can better engage with our social media community.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get started, let’s assume that you have the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Telegram account and access to the Telegram messaging client or access via https://web.telegram.org/.&lt;/li&gt; &lt;li&gt;Apache Camel K running in an accessible Kubernetes instance, with the Kubernetes and Camel K command line tools installed locally.&lt;/li&gt; &lt;li&gt;Microsoft Visual Studio Code running locally with the Tooling for Apache Camel K by Red Hat extension installed.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Before you create the Camel K side of the Telegram bot, you have to create your bot on Telegram. Nicola did a great job detailing those steps &lt;a href="https://www.nicolaferraro.me/2016/05/27/creating-a-telegram-bot-in-5-minutes-with-apache-camel/"&gt;in his article&lt;/a&gt;; see the section on creating the Telegram bot there and give your bot a unique name, like &lt;em&gt;camelk-hashtag-telegram-bot&lt;/em&gt;. Be sure to note the authorization token given by the @BotFather.&lt;/p&gt; &lt;p&gt;Now in VS Code, create a new workspace with an empty directory called &lt;code&gt;hashtagbot&lt;/code&gt;. In the &lt;code&gt;hashtagbot&lt;/code&gt; directory, create a file named &lt;code&gt;hashtagbot.groovy&lt;/code&gt; and copy this text into the file:&lt;/p&gt; &lt;pre&gt;from("telegram:bots/replace-me-with-your-telegram-token")     .choice()         .when()             .simple('${in.body} != null')             .to("direct:response1") from("direct:response1")     .log('Incoming message from Telegram is ${in.body}')     .setBody()         .simple('You said \"${in.body}\"?')         .to("telegram:bots/replace-me-with-your-telegram-token")&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember to replace “replace-me-with-your-telegram-token” with your Telegram authorization token given by the @BotFather.&lt;/p&gt; &lt;p&gt;After you save your file, right-click it and select &lt;em&gt;Start Apache Camel K Integration&lt;/em&gt; from the pop-up menu. A drop-down appears in the command palette with a few choices. Select &lt;em&gt;Dev Mode &amp;#8211; Apache Camel K Integration in Dev Mode&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-full wp-image-630457 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/integration-type-dropdown.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/integration-type-dropdown.jpg" alt="" width="686" height="211" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/integration-type-dropdown.jpg 686w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/integration-type-dropdown-300x92.jpg 300w" sizes="(max-width: 686px) 100vw, 686px" /&gt;&lt;/p&gt; &lt;p&gt;As your integration starts to run, watch the Apache Camel K output channel that appears:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-full wp-image-630467 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-1024x352.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel.jpg" alt="" width="1102" height="379" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel.jpg 1102w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-300x103.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-768x264.jpg 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-1024x352.jpg 1024w" sizes="(max-width: 1102px) 100vw, 1102px" /&gt;&lt;/p&gt; &lt;p&gt;In your Telegram app, find your bot (use the name you specified when you created the bot in @BotFather) and start a new conversation. Everything you type in Telegram should be repeated with “You said “&amp;#60;whatyoutyped&amp;#62;?” For example:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-full wp-image-630477 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-first-message-1024x782.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-first-message.jpg" alt="" width="1107" height="845" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-first-message.jpg 1107w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-first-message-300x229.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-first-message-768x586.jpg 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-first-message-1024x782.jpg 1024w" sizes="(max-width: 1107px) 100vw, 1107px" /&gt;&lt;/p&gt; &lt;p&gt;Next, update your route to check whether a given string has our hashtag #camelkrocks in it and respond accordingly.&lt;/p&gt; &lt;p&gt;Change the second route in your &lt;code&gt;hashtagbot.groovy&lt;/code&gt; file as follows:&lt;/p&gt; &lt;pre style="padding-left: 40px;"&gt;from("direct:response1")     .log('Incoming message from Telegram is ${in.body}')         &lt;b&gt;.choice() &lt;/b&gt;&lt;b&gt;    &lt;/b&gt;&lt;b&gt;    &lt;/b&gt;&lt;b&gt;.when(simple('${bodyAs(java.lang.String)} contains "#camelkrocks"')) &lt;/b&gt;&lt;b&gt;        .setBody(simple('Did somebody say #camelrocks? Of course it does!')) &lt;/b&gt;        .to("telegram:bots/replace-me-with-your-telegram-token")                 .end()&lt;/pre&gt; &lt;p&gt;Once you save your route, it updates the deployed integration and you can try it out. For example:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-full wp-image-630487 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-second-message-1024x817.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-second-message.jpg" alt="" width="1121" height="894" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-second-message.jpg 1121w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-second-message-300x239.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-second-message-768x612.jpg 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/bot-integration-output-channel-second-message-1024x817.jpg 1024w" sizes="(max-width: 1121px) 100vw, 1121px" /&gt;&lt;/p&gt; &lt;p&gt;Though this is a very simple example, you could use the approach as a basis to do things like routing messages to a database or to an email address for follow-up later.&lt;/p&gt; &lt;p&gt;We also have different deployment options that can save you from having to include your telegram token in the body of your route.&lt;/p&gt; &lt;p&gt;One way is to use the Apache Camel K “property” option.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;In the &lt;code&gt;hashtagbot.groovy&lt;/code&gt; file, edit the route by replacing your token with &lt;code&gt;{{telegram-token}}&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;When you start the integration, deploy the route by selecting the &lt;em&gt;Property &amp;#8211; Apache Camel K Integration with Property&lt;/em&gt; option in the drop-down menu.&lt;/li&gt; &lt;li&gt;Specify a property with the name &lt;code&gt;telegram-token&lt;/code&gt; and the value as your telegram authentication token. The runtime will replace &lt;code&gt;{{telegram-token}} &lt;/code&gt;with your token value.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Another way is to use the Apache Camel K ConfigMap or Secret method.  With this method, your token value is secured in the Kubernetes system.&lt;/p&gt; &lt;p&gt;For example, to use the Secret method:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a new &lt;code&gt;application.properties&lt;/code&gt; file and save it to your &lt;code&gt;hashtagbot&lt;/code&gt; folder.&lt;/li&gt; &lt;li&gt;In the &lt;code&gt;application.properties&lt;/code&gt; file, add the following line (replace the value with your actual token):&lt;br /&gt; &lt;code&gt;&lt;b&gt;telegram-token=replace-me-with-your-telegram-token&lt;/b&gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Right-click on the &lt;code&gt;application.properties&lt;/code&gt; file and then select &lt;em&gt;Create Kubernetes Secret from File&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Name the new secret &lt;code&gt;telegram-secret&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;In the &lt;code&gt;hashtagbot.groovy&lt;/code&gt; file, edit the route by replacing your token with &lt;code&gt;{{telegram-token}}&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;When you start the integration, deploy the route by selecting the &lt;em&gt;Secret &amp;#8211; Apache Camel K Integration with Kubernetes Secret&lt;/em&gt; option in the drop-down menu.&lt;/li&gt; &lt;li&gt;In the drop-down list that appears, specify the &lt;code&gt;telegram-secret&lt;/code&gt; that you created. The Camel K runtime will replace &lt;code&gt;{{telegram-token}} &lt;/code&gt;with your token value.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;To learn more, check out the latest on &lt;a href="https://camel.apache.org/camel-k/latest/"&gt;Apache Camel K&lt;/a&gt; and see the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-camelk"&gt;Tooling for Apache Camel K by Red Hat extension for Microsoft VS Code&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Happy coding!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F30%2Fsending-a-telegram-with-apache-camel-k-and-visual-studio-code%2F&amp;#38;linkname=Sending%20a%20telegram%20with%20Apache%20Camel%20K%20and%20Visual%20Studio%20Code" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F30%2Fsending-a-telegram-with-apache-camel-k-and-visual-studio-code%2F&amp;#38;linkname=Sending%20a%20telegram%20with%20Apache%20Camel%20K%20and%20Visual%20Studio%20Code" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F30%2Fsending-a-telegram-with-apache-camel-k-and-visual-studio-code%2F&amp;#38;linkname=Sending%20a%20telegram%20with%20Apache%20Camel%20K%20and%20Visual%20Studio%20Code" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F30%2Fsending-a-telegram-with-apache-camel-k-and-visual-studio-code%2F&amp;#38;linkname=Sending%20a%20telegram%20with%20Apache%20Camel%20K%20and%20Visual%20Studio%20Code" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F30%2Fsending-a-telegram-with-apache-camel-k-and-visual-studio-code%2F&amp;#38;linkname=Sending%20a%20telegram%20with%20Apache%20Camel%20K%20and%20Visual%20Studio%20Code" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F30%2Fsending-a-telegram-with-apache-camel-k-and-visual-studio-code%2F&amp;#38;linkname=Sending%20a%20telegram%20with%20Apache%20Camel%20K%20and%20Visual%20Studio%20Code" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F30%2Fsending-a-telegram-with-apache-camel-k-and-visual-studio-code%2F&amp;#38;linkname=Sending%20a%20telegram%20with%20Apache%20Camel%20K%20and%20Visual%20Studio%20Code" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F30%2Fsending-a-telegram-with-apache-camel-k-and-visual-studio-code%2F&amp;#038;title=Sending%20a%20telegram%20with%20Apache%20Camel%20K%20and%20Visual%20Studio%20Code" data-a2a-url="https://developers.redhat.com/blog/2019/09/30/sending-a-telegram-with-apache-camel-k-and-visual-studio-code/" data-a2a-title="Sending a telegram with Apache Camel K and Visual Studio Code"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/30/sending-a-telegram-with-apache-camel-k-and-visual-studio-code/"&gt;Sending a telegram with Apache Camel K and Visual Studio Code&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/_f1CXIZ_QfA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;When I was introduced to Apache Camel K a few months ago, I was amazed at how quickly developers could write and deploy an Apache Camel-based integration on Kubernetes. We immediately started work on creating Microsoft Visual Studio (VS) Code-based tools to make things even easier. What is Camel K? It’s a lightweight integration framework [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/30/sending-a-telegram-with-apache-camel-k-and-visual-studio-code/"&gt;Sending a telegram with Apache Camel K and Visual Studio Code&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">630437</post-id><dc:creator>Brian Fitzpatrick</dc:creator><dc:date>2019-09-30T07:00:22Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/30/sending-a-telegram-with-apache-camel-k-and-visual-studio-code/</feedburner:origLink></entry><entry><title>Python wheels, AI/ML, and ABI compatibility</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jNKS1uUPOrA/" /><category term="Machine Learning" /><category term="Python" /><category term="Universal Base Images (UBI)" /><category term="ABI" /><category term="AI/ML" /><category term="gcc" /><category term="RHEL" /><author><name>Subin Modeel</name></author><id>https://developers.redhat.com/blog/?p=629677</id><updated>2019-09-27T07:00:06Z</updated><published>2019-09-27T07:00:06Z</published><content type="html">&lt;p&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; has become a popular programming language in the AI/ML world. Projects like &lt;a href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt; and &lt;a href="https://pytorch.org/"&gt;PyTorch&lt;/a&gt; have Python bindings as the primary interface used by data scientists to write machine learning code. However, distributing AI/ML-related Python packages and ensuring application binary interface (ABI) compatibility between various Python packages and system libraries presents a unique set of challenges.&lt;/p&gt; &lt;p&gt;The manylinux standard (e.g., &lt;a href="https://www.python.org/dev/peps/pep-0599/"&gt;manylinux2014&lt;/a&gt;) for &lt;a href="https://opensource.com/article/19/2/manylinux-python-wheels"&gt;Python wheels&lt;/a&gt; provides a practical solution to these challenges, but it also introduces new challenges that the Python community and developers need to consider. Before we delve into these additional challenges, we&amp;#8217;ll briefly look at the Python ecosystem for packaging and distribution.&lt;br /&gt; &lt;span id="more-629677"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Wheels, AI/ML,  and ABIs&lt;/h2&gt; &lt;p&gt;Python packages are installed using the &lt;code&gt;pip&lt;/code&gt; command, which downloads the package from pypi.org.&lt;/p&gt; &lt;pre&gt;pip install &amp;#60;package-name&amp;#62;&lt;/pre&gt; &lt;p&gt;These packages can be of two types:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Pure Python wheels, which may or may not be targeted to a specific Python version&lt;/li&gt; &lt;li&gt;Extension wheels, which use native code written in C/C++&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;All AI/ML Python packages are extension wheels that use native operating system libraries. Compiled Python extension modules built on one distribution may not work on other distributions, or even on different machines running the same distribution with different system libraries installed. This is because the compiled binaries have a record of the ABI they rely on, such as relocations, symbols and versions, size of global data symbols, etc. At runtime, if the ABI does not match, the loader may raise an error. An example of a missing symbol with a version would look like this:&lt;/p&gt; &lt;pre&gt;/lib64/libfoo.so.1: version `FOO_1.2' not found (required by ./app)&lt;/pre&gt; &lt;p&gt;AI/ML project maintainers need to build different Python packages for Windows, macOS X, and Linux distributions. The precompiled binaries are packaged in a &lt;a href="https://www.python.org/dev/peps/pep-0427/"&gt;&lt;em&gt;wheel &lt;/em&gt;&lt;/a&gt;format with the &lt;code&gt;.whl&lt;/code&gt; file extension. A wheel is a zip file that can be interpreted as a Python library.&lt;/p&gt; &lt;p&gt;The file name contains specific tags, which are used by the &lt;code&gt;pip&lt;/code&gt; command to determine the Python version and operating system that match the system on which the AI/ML library is installed. The wheel also contains the layout of a Python project as it should be installed on the system. To avoid the need for users to compile these packages the project maintainers build and upload platform-specific wheels for Windows, macOS, and Linux on pypi.org.&lt;/p&gt; &lt;p&gt;Here are some examples of wheels for Linux and non-Linux distros:&lt;/p&gt; &lt;pre&gt;tensorflow-2.0.0-cp27-cp27m-macosx_10_11_x86_64.whl tensorflow-2.0.0-cp35-cp35m-win_amd64.whl tensorflow-2.0.0-cp36-cp36m-manylinux1_x86_64.whl tensorflow-2.0.0-cp37-cp37m-manylinux2010_x86_64.whl&lt;/pre&gt; &lt;h2&gt;Manylinux2014&lt;/h2&gt; &lt;p&gt;AI/ML project maintainers who want to distribute the Python library with native code for Linux distros have the difficult task of ensuring ABI compatibility. The compiled code needs to run on a wide variety of Linux distributions.&lt;/p&gt; &lt;p&gt;Fortunately, there is a way to make a binary compatible with most (though not all) Linux distributions.  To do this, you need to build a binary and use an ABI baseline that is older than any distribution you want to support. The expectation is that the newer distributions will keep the ABI guarantees; that way, you&amp;#8217;ll be able to run your binary on newer distributions as long as they provide the ABI baseline. Eventually, the ABI baselines will change in an incompatible way, and that may be a technical requirement for moving the baseline forward. There are other non-technical requirements for moving the ABI baseline forward, and they revolve around distribution lifecycles.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://www.python.org/dev/peps/pep-0513"&gt;manylinux&lt;/a&gt; platform tag is a way to make your Python libraries that are compatible with most Linux distributions. Python&amp;#8217;s manylinux defines an ABI baseline and targets the baseline by building on an old version of a distribution. To achieve maximum compatibility, it uses the longest-supported freely distributable version of Linux: &lt;a href="https://www.centos.org/"&gt;CentOS&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The first manylinux platform tag called &lt;a href="https://www.python.org/dev/peps/pep-0513"&gt;manylinux1&lt;/a&gt; uses CentOS 5. The second iteration called &lt;a href="https://www.python.org/dev/peps/pep-0571/"&gt;manylinux2010&lt;/a&gt; uses CentOS 6. The latest specification &lt;a href="https://www.python.org/dev/peps/pep-0599/"&gt;manylinux2014&lt;/a&gt; is a result of Red Hat, other vendors, and the Python community moving the manylinux specification ahead to use &lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image"&gt;CentOS 7/UBI 7&lt;/a&gt; and support more architectures.&lt;/p&gt; &lt;p&gt;To make the life of AI/ML Python project maintainers easier, the Python community provides a prebuilt manylinux build container, which can be used to build project wheels, listed here:&lt;/p&gt; &lt;pre&gt;centos5 Image - quay.io/pypa/manylinux1_x86_64 centos6 Image - quay.io/pypa/manylinux2010_x86_64 ubi7 Image - quay.io/pypa/manylinux2014_x86_64(coming soon)&lt;/pre&gt; &lt;p&gt;For AI/ML Python project users the &lt;code&gt;pip&lt;/code&gt; command is very important. The &lt;code&gt;pip&lt;/code&gt; command will install the appropriate wheel file based on wheel tags and also based on the manylinux platform tag of the wheel which matches the system. For example, a manylinux2014 wheel will not install on Red Hat Enterprise Linux (RHEL) 6 because it doesn’t have the system library versions specified in the manylinux2014 specification. Pip will install manylinux2010 wheels on RHEL 6 and manylinux2014 wheels on RHEL 7.&lt;/p&gt; &lt;p&gt;AI/ML Python project users have to ensure they update &lt;code&gt;pip&lt;/code&gt; command regularly before they update to the next AI/ML Python project version. If users are using containers, then the latest &lt;code&gt;pip&lt;/code&gt; command should be available in the container.&lt;/p&gt; &lt;h2&gt;Additional challenges&lt;/h2&gt; &lt;p&gt;Although the manylinux standard has helped deliver reliable and stable extension wheels, it does introduce two additional challenges:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;b&gt;Lifecycle&lt;/b&gt;&lt;br /&gt; At some point, the reference platforms for the ABI baselines will have end-of-life. The Python community must actively track the end-of-life support and CVEs for different system libraries used by the project and potentially move project maintainers to the next available manylinux platform tag. &lt;strong&gt;Note:&lt;/strong&gt; The EOL for CentOS 6 is November 30, 2020. The EOL for CentOS 7 is June 30, 2024.&lt;br /&gt; Lastly, project maintainers should ensure that they build wheels for all the manylinux platform tags or at least the wheels of the most recent specifications. This will give users the most options for installation.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Hardware vendor support&lt;/b&gt;&lt;br /&gt; Almost all AI/ML Python projects have some form of hardware accelerator support, such as CUDA (NVIDIA), ROCm (AMD), Intel MKL. The hardware vendors might not support all versions of the toolchain and project maintainers should pick a baseline toolchain (gcc, binutils, glibc) and set their wheels to a certain manylinux platform tags that match. Some projects might need to support a variety of architectures including Intel/AMD (i686, x86_64), Arm (aarch64, armhfp), IBM POWER (ppc64, ppc64le), or IBM Z Series (s390x). Regression tests on different architectures are essential to catch compatibility issues. See the Red Hat Enterprise Linux ABI compatibility guides for &lt;a href="https://access.redhat.com/articles/rhel-abi-compatibility"&gt;RHEL 7&lt;/a&gt; and &lt;a href="https://access.redhat.com/articles/rhel8-abi-compatibility"&gt;RHEL 8&lt;/a&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Solutions&lt;/h3&gt; &lt;p&gt;The Python community must follow the lifecycle of the reference software that is used to target the ABI baselines and plan accordingly. Python developers must carefully match system tooling or developer tooling to the hardware vendor software requirements. Solving both of these is a difficult but ultimately rewarding challenge.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#038;title=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" data-a2a-url="https://developers.redhat.com/blog/2019/09/27/python-wheels-ai-ml-and-abi-compatibility/" data-a2a-title="Python wheels, AI/ML, and ABI compatibility"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/27/python-wheels-ai-ml-and-abi-compatibility/"&gt;Python wheels, AI/ML, and ABI compatibility&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jNKS1uUPOrA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Python has become a popular programming language in the AI/ML world. Projects like TensorFlow and PyTorch have Python bindings as the primary interface used by data scientists to write machine learning code. However, distributing AI/ML-related Python packages and ensuring application binary interface (ABI) compatibility between various Python packages and system libraries presents a unique set [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/27/python-wheels-ai-ml-and-abi-compatibility/"&gt;Python wheels, AI/ML, and ABI compatibility&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">629677</post-id><dc:creator>Subin Modeel</dc:creator><dc:date>2019-09-27T07:00:06Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/27/python-wheels-ai-ml-and-abi-compatibility/</feedburner:origLink></entry><entry><title>DevNation Live Bengaluru: Dreaming of streaming with reactive programming</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uZT6iMEcMC0/" /><category term="Cloud" /><category term="DevNation" /><category term="cloud native" /><category term="DevNation Live" /><category term="reactive programming" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=623687</id><updated>2019-09-26T07:00:13Z</updated><published>2019-09-26T07:00:13Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p&gt;In this tutorial, presented by &lt;a href="https://developers.redhat.com/blog/author/yanaga/"&gt;Edson Yanaga&lt;/a&gt;, you&amp;#8217;ll learn about &lt;a href="https://developers.redhat.com/videos/youtube/FgqbSNdR2AQ/"&gt;reactive programming&lt;/a&gt; and why it matters in this new cloud-native era. We’ll use live coding demos to explain how to be reactive and benefit from this brave new streaming world.&lt;span id="more-623687"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/NzxjGuIGKHg" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://speakerdeck.com/yanaga/dreaming-of-streaming-with-reactive-programming"&gt;See the slides here&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us at an upcoming&lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt; &lt;span style="font-weight: 400;"&gt;developer event&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and see our collection of&lt;/span&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; &lt;span style="font-weight: 400;"&gt;past DevNation Live tech talks&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#038;title=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" data-a2a-url="https://developers.redhat.com/blog/2019/09/26/devnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming/" data-a2a-title="DevNation Live Bengaluru: Dreaming of streaming with reactive programming"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/26/devnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming/"&gt;DevNation Live Bengaluru: Dreaming of streaming with reactive programming&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uZT6iMEcMC0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. In this tutorial, presented by Edson Yanaga, you&amp;#8217;ll learn about reactive programming and why it matters in this new cloud-native era. We’ll use live coding [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/26/devnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming/"&gt;DevNation Live Bengaluru: Dreaming of streaming with reactive programming&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">623687</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-09-26T07:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/26/devnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming/</feedburner:origLink></entry><entry><title>4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lXCB6I8oo_s/" /><category term="Java" /><category term="OpenShift" /><category term="Red Hat AMQ" /><category term="Red Hat OpenShift Application Runtimes" /><category term="amq" /><category term="messaging" /><category term="OpenShift Container Platform" /><author><name>Chandra Shekhar Pandey</name></author><id>https://developers.redhat.com/blog/?p=628557</id><updated>2019-09-25T07:00:17Z</updated><published>2019-09-25T07:00:17Z</published><content type="html">&lt;p class="selectionShareable"&gt;In this article, we show how to set up &lt;a href="https://developers.redhat.com/products/amq/overview"&gt;Red Hat AMQ 7.4&lt;/a&gt; on &lt;a href="http://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;. Also, we show how to connect the external &lt;a href="http://mqtt.org" target="_blank" rel="noopener noreferrer"&gt;Message Queuing Telemetry Transport (MQTT) secure client&lt;/a&gt; to the AMQ 7.4 platform. MQTT is a Java-based client that uses the &lt;a href="https://www.eclipse.org/paho/" target="_blank" rel="noopener noreferrer"&gt;Eclipse Paho&lt;/a&gt; library and can publish and consume messages from Red Hat AMQ 7.4 Broker on OpenShift using secure transport. These commands and code have been verified with OpenShift 3.11.&lt;span id="more-628557"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Follow the steps below to perform this activity.&lt;/p&gt; &lt;h2&gt;Step 1: Create a secret and a service account&lt;/h2&gt; &lt;p&gt;In a new OpenShift project, create a secret and a service account with the view role:&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc new-project amq-demo [cpandey@cpandey AMQ74_CERTIFICATE]$ echo '{"kind": "ServiceAccount", "apiVersion": "v1", "metadata": {"name": "amq-service-account"}}' | oc create -f - [cpandey@cpandey AMQ74_CERTIFICATE]$ oc policy add-role-to-user view system:serviceaccount:amq-demo:amq-service-account [cpandey@cpandey AMQ74_CERTIFICATE]$ keytool -genkey -alias broker -keyalg RSA -keystore broker.ks [cpandey@cpandey AMQ74_CERTIFICATE]$ keytool -export -alias broker -keystore broker.ks -file broker_cert [cpandey@cpandey AMQ74_CERTIFICATE]$ keytool -genkey -alias client -keyalg RSA -keystore client.ks [cpandey@cpandey AMQ74_CERTIFICATE]$ keytool -import -alias broker -keystore client.ts -file broker_cert [cpandey@cpandey AMQ74_CERTIFICATE]$ oc create secret generic amq-app-secret --from-file=broker.ks [cpandey@cpandey AMQ74_CERTIFICATE]$ oc secrets add sa/amq-service-account secret/amq-app-secret &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All of these steps are mentioned in the official &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.4/html/deploying_amq_broker_on_openshift_container_platform/install-deploy-broker-ocp" target="_blank" rel="noopener noreferrer"&gt;Red Hat Documentation&lt;/a&gt;, with details.&lt;/p&gt; &lt;h2&gt;Step 2: Deploy Red Hat AMQ 7.4 Broker&lt;/h2&gt; &lt;p&gt;Deploy Red Hat AMQ 7.4 broker using the OpenShift web console:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Broker setup is easy with the OpenShift GUI. In the &lt;em&gt;amq-demo &lt;/em&gt;project, browse the catalog and search for the template &lt;em&gt;Red Hat A-MQ 7.4 (Ephemeral with SSL).&lt;/em&gt; The following six figures describe the information that you need to fill in for Broker setup. Once the configuration is complete, click the &lt;em&gt;Create&lt;/em&gt; button:&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_628587" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628587" class="wp-image-628587 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_417-1024x409.png" alt="" width="640" height="256" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_417-1024x409.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_417-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_417-768x307.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628587" class="wp-caption-text"&gt;Figure 1: Browse the catalog.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628577" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628577" class="wp-image-628577 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_418-1024x461.png" alt="" width="640" height="288" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_418-1024x461.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_418-300x135.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_418-768x346.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628577" class="wp-caption-text"&gt;Figure 2: Select the template.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628597" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628597" class="wp-image-628597 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_423-1024x466.png" alt="" width="640" height="291" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_423-1024x466.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_423-300x137.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_423-768x349.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628597" class="wp-caption-text"&gt;Figure 3: Complete configuration part 1.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628607" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628607" class="wp-image-628607 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_424-1024x456.png" alt="" width="640" height="285" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_424-1024x456.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_424-300x134.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_424-768x342.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628607" class="wp-caption-text"&gt;Figure 4: Complete configuration part 2.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628617" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628617" class="wp-image-628617 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_425-1024x461.png" alt="" width="640" height="288" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_425-1024x461.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_425-300x135.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_425-768x346.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628617" class="wp-caption-text"&gt;Figure 5: Complete configuration part 3.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628627" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628627" class="wp-image-628627 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_426-1024x423.png" alt="" width="640" height="264" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_426-1024x423.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_426-300x124.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_426-768x317.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628627" class="wp-caption-text"&gt;Figure 6: Complete the final step.&lt;/p&gt;&lt;/div&gt; &lt;ol start="2"&gt; &lt;li&gt;Run the following commands to check for services and pods. After a successful setup, you should have these available:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc get service|grep ssl brokertest-amq-amqp-ssl ClusterIP 172.30.4.207 5671/TCP 2m brokertest-amq-mqtt-ssl ClusterIP 172.30.145.232 8883/TCP 2m brokertest-amq-stomp-ssl ClusterIP 172.30.20.224 61612/TCP 2m brokertest-amq-tcp-ssl ClusterIP 172.30.160.172 61617/TCP 2m [cpandey@cpandey AMQ74_CERTIFICATE]$ [cpandey@cpandey AMQ74_CERTIFICATE]$ oc get pod NAME READY STATUS RESTARTS AGE brokertest-amq-1-z2xjq 1/1 Running 0 3m [cpandey@cpandey AMQ74_CERTIFICATE]$&lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Now, create a route in the current project &lt;em&gt;(&lt;/em&gt;amq-demo) for the MQTT service &lt;em&gt;brokertest-amq-mqtt-ssl&lt;/em&gt; so that external clients can access Red Hat AMQ 7.4 in OpenShift. Set this route&amp;#8217;s termination type to &lt;em&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html#passthrough-termination" target="_blank" rel="noopener noreferrer"&gt;passthrough&lt;/a&gt;&lt;/em&gt; so that the encrypted traffic goes to Red Hat AMQ 7.4 broker and TLS termination is not done at the route, specifically:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc create route passthrough --service brokertest-amq-mqtt-ssl route.route.openshift.io/brokertest-amq-mqtt-ssl created&lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Now, if we check routes available in the current project (amq-demo):&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc get route NAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD brokertest-amq-mqtt-ssl brokertest-amq-mqtt-ssl-amq-demo.192.168.42.111.nip.io brokertest-amq-mqtt-ssl passthrough None console console-amq-demo.192.168.42.111.nip.io brokertest-amq-jolokia passthrough None [cpandey@cpandey AMQ74_CERTIFICATE]$ &lt;/pre&gt; &lt;h2&gt;Step 3: Set up the Java MQTT client&lt;/h2&gt; &lt;p&gt;Now, set up the Java MQTT client external to your OpenShift environment. Once the route is configured, we just have to provide that URL in our client. Check out my personal &lt;a href="https://github.com/1984shekhar/Artemis_POC/tree/master/MQTT_CLIENT/MQTT_ECLIPSEPAHO_CLIENT_SSL" target="_blank" rel="noopener noreferrer"&gt;GitHub code&lt;/a&gt; for examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;For the MQTT publisher client, check out &lt;a href="https://github.com/1984shekhar/Artemis_POC/blob/master/MQTT_CLIENT/MQTT_ECLIPSEPAHO_CLIENT_SSL/src/main/java/com/mycompany/mqtt/client/MqttPublishSample.java#L17" target="_blank" rel="noopener noreferrer"&gt;MqttPublishSample.java&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;For the MQTT subscriber client, check out &lt;a href="https://github.com/1984shekhar/Artemis_POC/blob/master/MQTT_CLIENT/MQTT_ECLIPSEPAHO_CLIENT_SSL/src/main/java/com/mycompany/mqtt/client/MqttSubscribeSample.java#L13" target="_blank" rel="noopener noreferrer"&gt;MqttSubscribeSample.java&lt;/a&gt; .&lt;/li&gt; &lt;li&gt;To execute these clients, use &lt;a href="https://github.com/1984shekhar/Artemis_POC/blob/master/MQTT_CLIENT/MQTT_ECLIPSEPAHO_CLIENT_SSL/src/main/java/com/mycompany/mqtt/client/ThreadFactory.java#L29" target="_blank" rel="noopener noreferrer"&gt;ThreadFactory.java&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Note that we are using the client truststore &lt;code&gt;client.ts,&lt;/code&gt; which we generated in Step 1.&lt;/p&gt; &lt;h2&gt;Step 4: Monitor topic statistics&lt;/h2&gt; &lt;p&gt;Now that you&amp;#8217;re set up, you can monitor your topic statistics:&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc get pods NAME READY STATUS RESTARTS AGE brokertest-amq-1-z2xjq 1/1 Running 0 14m [cpandey@cpandey AMQ74_CERTIFICATE]$ oc rsh brokertest-amq-1-z2xjq sh-4.2$ cd /opt/amq/bin sh-4.2$ ./artemis queue stat OpenJDK 64-Bit Server VM warning: If the number of processors is expected to increase from one, then you should configure the number of parallel GC threads appropriately using -XX:ParallelGCThreads=N |NAME |ADDRESS |CONSUMER_COUNT |MESSAGE_COUNT |MESSAGES_ADDED |DELIVERING_COUNT |MESSAGES_ACKED | |DLQ |DLQ |0 |0 |0 |0 |0 | |ExpiryQueue |ExpiryQueue |0 |0 |0 |0 |0 | |activemq.management.b75e216e-902d-4393-8961-4a45dc54e4b6|activemq.management.b75e216e-902d-4393-8961-4a45dc54e4b6|1 |0 |0 |0 |0 | |paho3709101254858.MQTT_paho|MQTT_paho |0 |0 |9 |0 |9 | |queue1 |queue1 |0 |0 |0 |0 |0 | sh-4.2$&lt;/pre&gt; &lt;h2&gt;Wrapping up&lt;/h2&gt; &lt;p&gt;That&amp;#8217;s it. I hope this article helps you to quickly set up Red Hat AMQ 7.4 on OpenShift, plus the external secure client using the MQTT protocol. You can also check out this &lt;a href="https://developers.redhat.com/blog/2019/03/28/red-hat-amq-6-3-on-openshift-set-up-connect-ssl-client-and-configure-logging/"&gt;developer blog&lt;/a&gt; for setting up Red Hat AMQ 6.3 on OpenShift with the Camel-based Openwire Client using SSL.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#038;title=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/" data-a2a-title="4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/"&gt;4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lXCB6I8oo_s" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this article, we show how to set up Red Hat AMQ 7.4 on Red Hat OpenShift. Also, we show how to connect the external Message Queuing Telemetry Transport (MQTT) secure client to the AMQ 7.4 platform. MQTT is a Java-based client that uses the Eclipse Paho library and can publish and consume messages from [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/"&gt;4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">628557</post-id><dc:creator>Chandra Shekhar Pandey</dc:creator><dc:date>2019-09-25T07:00:17Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/</feedburner:origLink></entry><entry><title>test (ignore)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zv2sZtWZ3dM/test-ignore.html" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Mark Proctor</name></author><id>searchisko:content:id:jbossorg_blog-test_ignore</id><updated>2019-09-24T15:55:57Z</updated><published>2019-09-24T15:55:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;test (ignore)&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=WijDlA0b5BI:4yvM_Fsl8Lc:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=WijDlA0b5BI:4yvM_Fsl8Lc:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=WijDlA0b5BI:4yvM_Fsl8Lc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/WijDlA0b5BI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zv2sZtWZ3dM" height="1" width="1" alt=""/&gt;</content><summary>test (ignore)</summary><dc:creator>Mark Proctor</dc:creator><dc:date>2019-09-24T15:55:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/WijDlA0b5BI/test-ignore.html</feedburner:origLink></entry><entry><title>Changes to CentOS: What CentOS Stream means for developers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/r1d-ZdimQj0/" /><category term="Announcement" /><category term="Community" /><category term="Linux" /><category term="Operating System" /><category term="RHEL8" /><category term="CentOS" /><category term="CentOS Stream" /><category term="UBI" /><author><name>Bob Davis</name></author><id>https://developers.redhat.com/blog/?p=632407</id><updated>2019-09-24T15:31:03Z</updated><published>2019-09-24T15:31:03Z</published><content type="html">&lt;p&gt;Today &lt;a href="https://www.redhat.com/en/about/company/management/chris-wright"&gt;Chris Wright&lt;/a&gt;, vice president and CTO at Red Hat, published &lt;a href="http://redhat.com/en/blog/transforming-development-experience-within-centos"&gt;a post describing how CentOS is changing&lt;/a&gt; and the opportunities it opens for developers in the Red Hat Enterprise &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; (RHEL) ecosystem. The net effect of this change is that, in addition to &lt;a href="https://www.centos.org/"&gt;CentOS&lt;/a&gt; Linux 8, there is a new version of CentOS—CentOS Stream—which will provide a “rolling preview” of future Red Hat Enterprise Linux kernels and features. This is being announced in addition to the release of the traditional CentOS Linux 8, which is a downstream rebuild of the current RHEL release.&lt;/p&gt; &lt;p&gt;CentOS Stream is an exciting addition to the family of Linux operating systems that are upstream and downstream of Red Hat Enterprise Linux.&lt;/p&gt; &lt;p&gt;CentOS Stream will live in-between &lt;a href="https://getfedora.org/"&gt;Fedora&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/linux/"&gt;RHEL&lt;/a&gt;, providing a clearer vision of what the next version of RHEL will be, giving developers the opportunity to stay a step or two ahead in their planning, and making it easier to ensure next-generation applications will be compatible with future RHEL versions. CentOS Stream also will make contributing to future versions of RHEL much simpler and more direct.&lt;/p&gt; &lt;p&gt;This clearly benefits ecosystem developers writing hardware drivers or extending protocols for RHEL, and can give application developers a testbed for applications they want to deploy on future RHEL versions. We hope this will bring even more community engagement to Fedora, CentOS, and RHEL, continuing our “upstream first” policy.&lt;/p&gt; &lt;p&gt;Fedora has always been our upstream “proving ground” where the community innovates and experiments, and that won’t change. If you’re interested in reading more about Fedora, and the relationship between Fedora, CentOS, and RHEL, read Matthew Miller’s &lt;a href="https://fedoramagazine.org/fedora-and-centos-stream" target="_blank" rel="noopener noreferrer"&gt;new article on the topic&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In addition to the existing releases of CentOS Linux, CentOS Stream, and Fedora, all &lt;a href="https://developers.redhat.com/?sc_cid=7013a000002CyRkAAK"&gt;Red Hat Developer&lt;/a&gt; members have access to no-cost RHEL via a &lt;a href="https://developers.redhat.com/register/?sc_cid=7013a000002CyRkAAK"&gt;no-cost subscription&lt;/a&gt;. These options should make sure that, no matter what problem you’re trying to solve, there’s a Linux distro that best suits your particular needs.&lt;/p&gt; &lt;p&gt;More information on why RHEL is a fantastic platform for application development can be found in the blog post &amp;#8220;&lt;a href="https://developers.redhat.com/blog/2019/08/21/why-you-should-be-developing-on-red-hat-enterprise-linux/"&gt;Why you should be developing on Red Hat Enterprise Linux&lt;/a&gt;.&amp;#8221;&lt;/p&gt; &lt;p&gt;For container-based applications, Universal Base Images will provide the flexibility needed to deploy across multiple Linux distributions, which should include CentOS Stream. We encourage developers building applications that will run in VMs or on bare metal to explore Red Hat Enterprise Linux for your production platform, and take advantage of the no-cost RHEL available through Red Hat Developer for your development needs.&lt;/p&gt; &lt;p&gt;We’d love to hear about how CentOS Stream will fit into your software development practices, and encourage your feedback.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#038;title=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" data-a2a-url="https://developers.redhat.com/blog/2019/09/24/changes-to-centos-what-centos-stream-means-for-developers/" data-a2a-title="Changes to CentOS: What CentOS Stream means for developers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/24/changes-to-centos-what-centos-stream-means-for-developers/"&gt;Changes to CentOS: What CentOS Stream means for developers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/r1d-ZdimQj0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Today Chris Wright, vice president and CTO at Red Hat, published a post describing how CentOS is changing and the opportunities it opens for developers in the Red Hat Enterprise Linux (RHEL) ecosystem. The net effect of this change is that, in addition to CentOS Linux 8, there is a new version of CentOS—CentOS Stream—which [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/24/changes-to-centos-what-centos-stream-means-for-developers/"&gt;Changes to CentOS: What CentOS Stream means for developers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">632407</post-id><dc:creator>Bob Davis</dc:creator><dc:date>2019-09-24T15:31:03Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/24/changes-to-centos-what-centos-stream-means-for-developers/</feedburner:origLink></entry><entry><title>DevNation Live Bengaluru: Kubernetes serverless application architecture</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/UDdzkWr-2CY/" /><category term="DevNation" /><category term="Events" /><category term="Kubernetes" /><category term="Knative" /><category term="microservices" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=622077</id><updated>2019-09-24T07:00:31Z</updated><published>2019-09-24T07:00:31Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p&gt;In this session, &lt;a href="https://developers.redhat.com/blog/author/burrsutter/"&gt;Burr Sutter&lt;/a&gt; discusses &lt;a href="https://developers.redhat.com/topics/serverless-architecture/"&gt;serverless architectures&lt;/a&gt;, which have become a common approach in organizations that want to be more effective in DevOps and optimize their IT resources. This approach adds further flexibility to the next generation of &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt;, and &lt;a href="https://developers.redhat.com/topics/knative/"&gt;Knative&lt;/a&gt; helps running your microservices serverless workloads on Kubernetes/OpenShift be more agile and effective.&lt;span id="more-622077"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/sVA2EoUAQNE" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us at an upcoming&lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt; &lt;span style="font-weight: 400;"&gt;developer event&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and see our collection of&lt;/span&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; &lt;span style="font-weight: 400;"&gt;past DevNation Live tech talks&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#038;title=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" data-a2a-url="https://developers.redhat.com/blog/2019/09/24/devnation-live-bengaluru-kubernetes-serverless-application-architecture/" data-a2a-title="DevNation Live Bengaluru: Kubernetes serverless application architecture"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/24/devnation-live-bengaluru-kubernetes-serverless-application-architecture/"&gt;DevNation Live Bengaluru: Kubernetes serverless application architecture&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/UDdzkWr-2CY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. In this session, Burr Sutter discusses serverless architectures, which have become a common approach in organizations that want to be more effective in DevOps and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/24/devnation-live-bengaluru-kubernetes-serverless-application-architecture/"&gt;DevNation Live Bengaluru: Kubernetes serverless application architecture&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/09/24/devnation-live-bengaluru-kubernetes-serverless-application-architecture/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">622077</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-09-24T07:00:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/24/devnation-live-bengaluru-kubernetes-serverless-application-architecture/</feedburner:origLink></entry><entry><title>How the new Quarkus extension for Visual Studio Code improves the development experience</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hqYLp3ki0lo/" /><category term="Quarkus" /><category term="VS Code" /><author><name>David Kwon</name></author><id>https://developers.redhat.com/blog/?p=630077</id><updated>2019-09-23T13:45:28Z</updated><published>2019-09-23T13:45:28Z</published><content type="html">&lt;p&gt;Earlier this year, we were introduced to &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt;, the next-generation, container-first framework for Java applications. As expected, such new frameworks and technologies make way for new developer tools focused on making the development experience even better.&lt;/p&gt; &lt;p&gt;The&lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-quarkus"&gt; recent Quarkus Tools for Visual Studio Code release &lt;/a&gt;aims to do just that, by bringing features specific to Quarkus project development within VS Code. The new VS Code extension is dependent on a couple of Java extensions for VS Code, so it is recommended that you have the &lt;a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack"&gt;Java Extension Pack&lt;/a&gt; installed. This article outlines what the Quarkus Tools for Visual Studio Code has to offer: convenient features for an already convenient Java framework.&lt;span id="more-630077"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/redhat-developer/vscode-quarkus/blob/master/README.md"&gt;For more detailed information, check out the GitHub repository.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Watch a demo of Quarkus Tools for Visual Studio Code:&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/XMrLP_7IbW0?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3 id="1"&gt;Generating a Maven-based Quarkus project&lt;/h3&gt; &lt;p&gt;Previously, generating a Maven-based Quarkus project required you to run a Maven command or create a project with &lt;a href="https://code.quarkus.io/"&gt;code.quarkus.io&lt;/a&gt;. Now you can create a new project right from a user interface in VS Code. This can be done through a new wizard that generates Maven-based Quarkus projects with the latest version of Quarkus.&lt;img class=" alignnone size-full wp-image-630597 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/navigate_thorugh_wizard_new-1024x308.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/navigate_thorugh_wizard_new.gif" alt="" width="1189" height="358" /&gt;&lt;/p&gt; &lt;p&gt;The wizard will ask you for the project’s groupId, artifactId, project version, package name, resource name, and target directory. It also lets you select Quarkus extensions to add to your new project. If you selected Quarkus extensions through the wizard before, the &amp;#8220;Last Used&amp;#8221; option lets you easily select all previously chosen extensions.&lt;img class=" alignnone size-full wp-image-630167 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option-1024x426.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option.png" alt="" width="1189" height="495" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option.png 1189w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option-300x125.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option-768x320.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option-1024x426.png 1024w" sizes="(max-width: 1189px) 100vw, 1189px" /&gt;&lt;/p&gt; &lt;h3&gt;Snippet support&lt;/h3&gt; &lt;p&gt;The VS Code extension provides snippets to create new Quarkus resources and tests, which can help speed up your workflow. You can use these snippets by calling the &lt;code&gt;Insert Snippet&lt;/code&gt; VS Code command or by simply typing the snippet prefix in a Java file. Pressing tab will place the cursor at the next location of interest.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630187 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/using_a_snippet-1024x395.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/using_a_snippet.gif" alt="" width="1625" height="627" /&gt;&lt;/p&gt; &lt;h3&gt;Adding Quarkus extensions to a Quarkus project&lt;/h3&gt; &lt;p&gt;The VS Code extension provides a separate wizard for adding Quarkus extensions to the current project.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630197 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/add_extension_wizard-1024x434.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/add_extension_wizard.gif" alt="" width="1185" height="502" /&gt;&lt;/p&gt; &lt;p&gt;After selecting the desired Quarkus extension(s), the Maven command to add the extensions will run in VS Code’s integrated terminal.&lt;/p&gt; &lt;h3&gt;Debugging a Quarkus project&lt;/h3&gt; &lt;p&gt;Starting a debug session with the VS Code extension’s debug command automatically creates and adds a new VS Code task and debug configuration in the project folder. This step allows VS Code to automatically start the Quarkus application by running the &lt;code&gt;quarkus:dev&lt;/code&gt; command when you start a debug session. The debugger will attach to the application right after it starts. When closing the debug session, you are provided with options to terminate the Quarkus application or keep it running.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630217 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1.png" alt="" width="931" height="217" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1.png 931w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1-300x70.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1-768x179.png 768w" sizes="(max-width: 931px) 100vw, 931px" /&gt;&lt;/p&gt; &lt;h3&gt;Tree view for application.properties&lt;/h3&gt; &lt;p&gt;Upon opening the application.properties file, the VS Code explorer outline will provide you with a tree view containing all property keys and values. This feature is especially useful for large application.properties files because it groups properties by their namespace and profile.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-630227 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/tree_view_new.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/tree_view_new.png" alt="" width="391" height="308" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/tree_view_new.png 391w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/tree_view_new-300x236.png 300w" sizes="(max-width: 391px) 100vw, 391px" /&gt;&lt;/p&gt; &lt;h3&gt;Hover and documentation for application.properties&lt;/h3&gt; &lt;p&gt;The ability to hover over property keys makes it easy to view the property’s documentation. The documentation provides the property key’s value type, default value (if it exists), phase (whether the property applies at Quarkus runtime or build time), and the extension name.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc-1024x429.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc.png" alt="" width="1201" height="503" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc.png 1201w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc-300x126.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc-768x322.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc-1024x429.png 1024w" sizes="(max-width: 1201px) 100vw, 1201px" /&gt;&lt;/p&gt; &lt;h3&gt;Completion for application.properties&lt;/h3&gt; &lt;p&gt;As of now, there are more than 400 possible predefined Quarkus properties that could appear in an application.properties file. I challenge you to remember them all :). Because of the vast number of properties that could be configured, property key and value completion prove useful to anyone working with the application.properties file.&lt;/p&gt; &lt;p&gt;After opening the application.properties file, you can receive property key completion options as you type, or with the Ctrl+Space (Option+Space for macOS) keyboard shortcut. The list of completion options is in sync with the Quarkus extensions that are currently available to the project. That means, whenever Quarkus extensions are added or removed, the list of completion options will be updated to provide you with the relevant completion options.&lt;img class=" alignnone size-full wp-image-630907 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/08_key_completion-1024x437.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/08_key_completion.gif" alt="" width="1462" height="624" /&gt;&lt;/p&gt; &lt;p&gt;If the property key has a default value, it will be inserted automatically as a part of the completion.&lt;img class=" alignnone size-full wp-image-630917 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/09_default_value_completion-1024x437.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/09_default_value_completion.gif" alt="" width="1462" height="624" /&gt;&lt;/p&gt; &lt;p&gt;Completion is also available for enumerated type and boolean values.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/enum_bool_completion-1024x320.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/enum_bool_completion.gif" alt="" width="1078" height="337" /&gt;&lt;/p&gt; &lt;p&gt;There is also completion support for mapped properties. Pressing tab after editing the property will place the cursor at the next location.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/moving_the_cursor-1024x331.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/moving_the_cursor.gif" alt="" width="1229" height="397" /&gt;&lt;/p&gt; &lt;h3&gt;Validation for application.properties&lt;/h3&gt; &lt;p&gt;Last but not least, we have validation support for application.properties. We currently provide validation support for unknown properties, duplicate properties, and for missing equals signs.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630317 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new.png" alt="" width="982" height="354" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new.png 982w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new-300x108.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new-768x277.png 768w" sizes="(max-width: 982px) 100vw, 982px" /&gt;&lt;/p&gt; &lt;h2&gt;Next steps&lt;/h2&gt; &lt;p&gt;As you can see, Quarkus Tools for Visual Studio Code has great features to help provide a seamless developer experience and promote Quarkus project development within VS Code. However, this does not mean that the extension is perfect and bug-free; it is still being improved. We aspire to add new features (such as a CodeLens feature that would open REST endpoint URLs in a web browser) and improve existing features (such as completion, validation, snippets).&lt;/p&gt; &lt;p&gt;If you prefer IDEs such as Eclipse and IntelliJ IDEA, the good news is that Quarkus tooling for those IDEs are currently in progress. Because the application.properties features are provided via the &lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;Language Server Protocol (LSP)&lt;/a&gt;, it is possible to provide the same features to other editors and IDEs.&lt;/p&gt; &lt;p&gt;If you have any issues or feature requests, please let us know by creating a GitHub issue &lt;a href="https://github.com/redhat-developer/vscode-quarkus/issues"&gt;here&lt;/a&gt;. We would be very happy to listen to any suggestions for improvement. If you would like to contribute to the project, the contributing guide is located in the GitHub repository &lt;a href="https://github.com/redhat-developer/vscode-quarkus/blob/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Thank you for reading!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#038;title=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" data-a2a-url="https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/" data-a2a-title="How the new Quarkus extension for Visual Studio Code improves the development experience"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/"&gt;How the new Quarkus extension for Visual Studio Code improves the development experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hqYLp3ki0lo" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Earlier this year, we were introduced to Quarkus, the next-generation, container-first framework for Java applications. As expected, such new frameworks and technologies make way for new developer tools focused on making the development experience even better. The recent Quarkus Tools for Visual Studio Code release aims to do just that, by bringing features specific to [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/"&gt;How the new Quarkus extension for Visual Studio Code improves the development experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">630077</post-id><dc:creator>David Kwon</dc:creator><dc:date>2019-09-23T13:45:28Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/</feedburner:origLink></entry></feed>
