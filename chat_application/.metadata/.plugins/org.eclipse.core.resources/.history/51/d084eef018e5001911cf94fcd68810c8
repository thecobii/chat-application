package ch.diogopocas.chatapp.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import ch.diogopocas.chatapp.domain.Chat;
import ch.diogopocas.chatapp.service.ChatService;

/**
 * 
 * @author diogo
 *
 *
 *Erlauben dass React auf das Backend zugreifen kann
 */
@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/chats")
public class ChatController {
	
    private ChatService chatService;

    public ChatController(ChatService chatService) {
        this.chatService = chatService;
    }

    /**
     * Chats auflisten
     * @return List aus Chats
     */
    @GetMapping
    @ResponseStatus(HttpStatus.OK)
    public List<Chat> getAllChats() {
        return chatService.findAll();
    }
    /**
     * Chat erstellen und im Datenbank speichern
     * @param chat
     * @return chat (datenbank gespeichert)
     */
    @PostMapping
    @ResponseStatus(HttpStatus.CREATED)
    public Chat createChat(@Valid @RequestBody Chat chat) {
        return chatService.createChat(chat);
    }
    
    /**
     * Ausgew$hlten Chat löschen (mit ID)
     * @param id
     */
    @DeleteMapping("/delete/{id}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void deleteChat(@PathVariable("id") Long id) {
        chatService.deleteChat(id);
    }
    
    /**
     * Chat Name ändern und im Datenbank aktualisieren
     * @param id
     * @param chat
     * @return chat updatet
     */
    @PutMapping("/{id}")
    @ResponseStatus(HttpStatus.OK)
    public Chat putChat(@PathVariable("id") Long id, @Valid @RequestBody Chat chat) {
        return chatService.updateChat(id, chat);
    }
}


